///
/// HybridNitroDocumentPickerSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroDocumentPickerSpec``
public protocol HybridNitroDocumentPickerSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func pick(options: NitroDocumentPickerOptions) throws -> Promise<[NitroDocumentPickerResult]>
}

/// See ``HybridNitroDocumentPickerSpec``
public class HybridNitroDocumentPickerSpec_base {
  private weak var cxxWrapper: HybridNitroDocumentPickerSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroDocumentPickerSpec_cxx {
  #if DEBUG
    guard self is HybridNitroDocumentPickerSpec else {
      fatalError("`self` is not a `HybridNitroDocumentPickerSpec`! Did you accidentally inherit from `HybridNitroDocumentPickerSpec_base` instead of `HybridNitroDocumentPickerSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroDocumentPickerSpec_cxx(self as! HybridNitroDocumentPickerSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroDocumentPicker HybridObject.
 * Implement this protocol to create Swift-based instances of NitroDocumentPicker.
 * ```swift
 * class HybridNitroDocumentPicker : HybridNitroDocumentPickerSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroDocumentPickerSpec = HybridNitroDocumentPickerSpec_protocol & HybridNitroDocumentPickerSpec_base
