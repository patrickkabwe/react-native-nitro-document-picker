///
/// JNitroDocumentType.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroDocumentType.hpp"

namespace margelo::nitro::nitrodocumentpicker {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "NitroDocumentType" and the the Kotlin enum "NitroDocumentType".
   */
  struct JNitroDocumentType final: public jni::JavaClass<JNitroDocumentType> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrodocumentpicker/NitroDocumentType;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum NitroDocumentType.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroDocumentType toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("_ordinal");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<NitroDocumentType>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JNitroDocumentType> fromCpp(NitroDocumentType value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldPDF = clazz->getStaticField<JNitroDocumentType>("PDF");
      static const auto fieldDOCX = clazz->getStaticField<JNitroDocumentType>("DOCX");
      static const auto fieldXLSX = clazz->getStaticField<JNitroDocumentType>("XLSX");
      static const auto fieldPPTX = clazz->getStaticField<JNitroDocumentType>("PPTX");
      static const auto fieldTXT = clazz->getStaticField<JNitroDocumentType>("TXT");
      static const auto fieldCSV = clazz->getStaticField<JNitroDocumentType>("CSV");
      
      switch (value) {
        case NitroDocumentType::PDF:
          return clazz->getStaticFieldValue(fieldPDF);
        case NitroDocumentType::DOCX:
          return clazz->getStaticFieldValue(fieldDOCX);
        case NitroDocumentType::XLSX:
          return clazz->getStaticFieldValue(fieldXLSX);
        case NitroDocumentType::PPTX:
          return clazz->getStaticFieldValue(fieldPPTX);
        case NitroDocumentType::TXT:
          return clazz->getStaticFieldValue(fieldTXT);
        case NitroDocumentType::CSV:
          return clazz->getStaticFieldValue(fieldCSV);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::invalid_argument("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::nitrodocumentpicker
