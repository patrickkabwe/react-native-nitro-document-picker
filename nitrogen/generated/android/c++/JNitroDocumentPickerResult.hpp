///
/// JNitroDocumentPickerResult.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroDocumentPickerResult.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::nitrodocumentpicker {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroDocumentPickerResult" and the the Kotlin data class "NitroDocumentPickerResult".
   */
  struct JNitroDocumentPickerResult final: public jni::JavaClass<JNitroDocumentPickerResult> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrodocumentpicker/NitroDocumentPickerResult;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroDocumentPickerResult by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroDocumentPickerResult toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldPath = clazz->getField<jni::JString>("path");
      jni::local_ref<jni::JString> path = this->getFieldValue(fieldPath);
      static const auto fieldBase64 = clazz->getField<jni::JString>("base64");
      jni::local_ref<jni::JString> base64 = this->getFieldValue(fieldBase64);
      static const auto fieldName = clazz->getField<jni::JString>("name");
      jni::local_ref<jni::JString> name = this->getFieldValue(fieldName);
      return NitroDocumentPickerResult(
        path != nullptr ? std::make_optional(path->toStdString()) : std::nullopt,
        base64 != nullptr ? std::make_optional(base64->toStdString()) : std::nullopt,
        name->toStdString()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroDocumentPickerResult::javaobject> fromCpp(const NitroDocumentPickerResult& value) {
      return newInstance(
        value.path.has_value() ? jni::make_jstring(value.path.value()) : nullptr,
        value.base64.has_value() ? jni::make_jstring(value.base64.value()) : nullptr,
        jni::make_jstring(value.name)
      );
    }
  };

} // namespace margelo::nitro::nitrodocumentpicker
